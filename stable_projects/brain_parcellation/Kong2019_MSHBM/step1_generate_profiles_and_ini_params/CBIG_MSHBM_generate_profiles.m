function CBIG_MSHBM_generate_profiles(seed_mesh,targ_mesh,out_dir,sub,sess,split_flag)

% CBIG_MSHBM_generate_profiles(seed_mesh,targ_mesh,out_dir,sub,sess,split_flag)
% This function will generate functional connectivity profiles for a
% specific subject in a specific session. A split flag can be passed in if 
% the user want to split the session into two sub-sessions and create 
% profiles for each sub-session. 
%
% Input:
%   - seed_mesh:
%
%     The resolution of seed regions, e.g. 'fsaverage3' or 'fs_LR_900'. 
%     If the data is in fsaverage surface (e.g. fsaverage5/6), the 
%     seed_mesh should be defined by fsaverage surface in the same 
%     resolution as the data space, or lower resolution, e.g. fsaverage3/4. 
%     We also allow the data in fs_LR_32k, the only available seed_mesh is 
%     fs_LR_900, which is generated by CBIG lab.
%
%   - targ_mesh:
%
%     The surface space of fMRI data, e.g. 'fsaverage5' or 'fs_LR_32k'.
%     The data is allowed to be in either fsaverage space (e.g. 
%     fsaverage4/5/6, fsaverage) or fs_LR_32k. Note that fs_LR_164k is not
%     available.
%
%   - out_dir:
%
%     The input fMRI data lists are assumed to exist in the following way:
%     For data in fsaverage space:
%     <out_dir>/data_list/fMRI_list/lh_sub?_sess?.txt
%     <out_dir>/data_list/fMRI_list/rh_sub?_sess?.txt
%     For data in fs_LR_32k space:
%     <out_dir>/data_list/fMRI_list/sub?_sess?.txt
%     Each line in above files corresponds to the full path of the fMRI
%     data of each run. For example, if the subject 1 in fsaverage5 has 2 
%     sessions and session 2 has 2 runs then there should be:
%     <out_dir>/data_list/fMRI_list/lh_sub1_sess1.txt
%     <out_dir>/data_list/fMRI_list/rh_sub1_sess1.txt
%     <out_dir>/data_list/fMRI_list/lh_sub1_sess2.txt
%     <out_dir>/data_list/fMRI_list/rh_sub1_sess2.txt
%     and lh_sub1_sess2.txt should have two lines:
%     <path_to_fMRI_data>/lh*<fMRI_filename_of_run_1>.nii.gz
%     <path_to_fMRI_data>/lh*<fMRI_filename_of_run_2>.nii.gz
%
%     The input censor lists are assumed to exist in the following way:
%     <out_dir>/data_list/censor_list/sub?_sess?.txt
%     Each line in above file corresponds to the full path of the censor
%     list of each run. For example, if the subject 1 has 2 sessions and
%     session 2 has 2 runs then there should be:
%     <out_dir>/data_list/censor_list/sub1_sess1.txt
%     <out_dir>/data_list/censor_list/sub1_sess2.txt
%     and sub1_sess2.txt should have two lines:
%     <path_to_fMRI_data>/<censor_filename_of_run_1>
%     <path_to_fMRI_data>/<censor_filename_of_run_2>
%     Please note that the censor file shouled be a text file contains a
%     single column with binary numbers and its length is the number of 
%     timepoints. The outliers are indicated by 0s and will be flaged out
%     when compute the profiles. If the user don't want to (or don't have)
%     the censor lists, please leave the <out_dir>/data_list/censor_list as
%     an exmpty folder.
%
%   - sub: (string)
%
%     The subject ID, e.g. '1','2'. 
%     The subject ID could be defined by 1,2,3... or other style 
%     0064,0021,0032... The user need to make sure the IDs are
%     consistent with the IDs they used in the fMRI lists and censor lists.
%
%   - sess: (string)
%
%     The session ID, e.g. '1',2'.
%     The session ID could be defined by 1,2,3... or other style 
%     0064,0021,0032... The user need to make sure the IDs are
%     consistent with the IDs they used in the fMRI lists and censor lists.     
%
%   - split_flag: (string)
%
%     '1' or '0'. This flag is used to split 1 session into 2 sub-sessions
%     to create two profiles for each sub-session. The two sub-sessions 
%     will be the first half and the other half. The flag should be used
%     if the user want to apply MSHBM model on 1 session fMRI data. 
%
% Output:
%
%   The generated profiles will saved into the following files:
%   For data in fsaverage space:
%   <out_dir>/profiles/sub<sub_id>/sess<sess_id>/lh.sub<sess_id>_sess...
%       <sess_id>_<targ_mesh>_roi<seed_mesh>.surf2surf_profile.nii.gz
%   <out_dir>/profiles/sub<sub_id>/sess<sess_id>/lh.sub<sess_id>_sess...
%       <sess_id>_<targ_mesh>_roi<seed_mesh>.surf2surf_profile.nii.gz
%   For data in fs_LR_32k space:
%   <out_dir>/profiles/sub<sub_id>/sess<sess_id>/sub<sess_id>_sess...
%       <sess_id>_<targ_mesh>_roi<seed_mesh>.surf2surf_profile.mat
%   Please note that the profile will be saved as 64984x1483 'profile_mat' 
%   variable for fs_LR_32k.
%
% Example:
% CBIG_MSHBM_generate_profiles('fsaverage3','fsaverage5','./test_output','1','1','0');
% CBIG_MSHBM_generate_profiles('fs_LR_900','fs_LR_32k','./test_output','1','1','1');
%
% Written by Ru(by) Kong and CBIG under MIT license: https://github.com/ThomasYeoLab/CBIG/blob/master/LICENSE.md




out_profile_dir = fullfile(out_dir,'profiles',['sub' sub],['sess' sess]);
if(~exist(out_profile_dir))
    mkdir(out_profile_dir);
end

if(strcmp(targ_mesh,'fs_LR_32k'))
    profile_file = fullfile(out_profile_dir,['sub' sub '_sess' sess '_'...
        targ_mesh '_roi' seed_mesh '.surf2surf_profile.mat']);

    fMRI_list = fullfile(out_dir,'data_list','fMRI_list',['sub' sub '_sess' sess '.txt']);

    censor_list = fullfile(out_dir,'data_list','censor_list',['sub' sub '_sess' sess '.txt']);

    if(~exist(censor_list))
        censor_list = 'NONE';
    end

    CBIG_ComputeCorrelationProfile(seed_mesh,targ_mesh, profile_file, 'NONE', '0.1', ...
        fMRI_list, 'NONE', censor_list, split_flag);

elseif(~isempty(strfind(targ_mesh,'fsaverage'))) 
    lh_profile_file = fullfile(out_profile_dir,['lh.sub' sub '_sess' sess '_'...
        targ_mesh '_roi' seed_mesh '.surf2surf_profile.nii.gz']);
    rh_profile_file = fullfile(out_profile_dir,['rh.sub' sub '_sess' sess '_'...
        targ_mesh '_roi' seed_mesh '.surf2surf_profile.nii.gz']);

    lh_fMRI_list = fullfile(out_dir,'data_list','fMRI_list',['lh_sub' sub '_sess' sess '.txt']);
    rh_fMRI_list = fullfile(out_dir,'data_list','fMRI_list',['rh_sub' sub '_sess' sess '.txt']);

    censor_list = fullfile(out_dir,'data_list','censor_list',['sub' sub '_sess' sess '.txt']);


    if(~exist(censor_list))
        censor_list = 'NONE';
    end

    CBIG_ComputeCorrelationProfile(seed_mesh,targ_mesh, lh_profile_file, rh_profile_file, '0.1', ...
        lh_fMRI_list, rh_fMRI_list, censor_list, split_flag);
else
    error(['Unknown mesh type. Only fsaverage surface types, for example,'...
        'fsaverage5/6 and fs_LR_32k will be allowed.'])
end

